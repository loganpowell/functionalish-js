import type { Stringer } from "./api";
/**
 * Uppercase string formatter.
 *
 * @param x - string to transform
 */
export declare const upper: Stringer<string>;
/**
 * Lowercase string formatter.
 *
 * @param x - string to transform
 */
export declare const lower: Stringer<string>;
/**
 * String formatter which capitalizes first character.
 *
 * @param x - string to transform
 */
export declare const capitalize: Stringer<string>;
/**
 * Converts a CamelCase string into kebab case, with optional custom
 * delimiter (`-` by default).
 *
 * TODO: Switch back to currently broken Regex w/ positive lookbehind,
 * once avail in FF & Safari (currently TC39 stage 4)
 *
 * {@link https://github.com/tc39/proposal-regexp-lookbehind}
 *
 * @example
 * ```ts
 * kebab("FooBar23Baz");
 * // "foo-bar23-baz"
 * ```
 *
 * @param x -
 * @param delim -
 */
export declare const kebab: Stringer<string>;
/**
 * Short for {@link kebab} using `_` as delimiter.
 *
 * @param x -
 */
export declare const snake: (x: string) => string;
/**
 * Converts a kebab-case or snake_case string into CamelCase. Uses `-`
 * as default delimiter.
 *
 * @param x -
 * @param delim -
 */
export declare const camel: Stringer<string>;
//# sourceMappingURL=case.d.ts.map