import { DCons } from "@thi.ng/dcons";
import type { ChannelItem, IBuffer } from "./api";
export declare class FixedBuffer<T> implements IBuffer<T> {
    buf: DCons<ChannelItem<T>>;
    limit: number;
    constructor(limit?: number);
    get length(): number;
    isEmpty(): boolean;
    isFull(): boolean;
    release(): boolean;
    push(x: ChannelItem<T>): boolean;
    drop(): ChannelItem<T> | undefined;
}
export declare class DroppingBuffer<T> extends FixedBuffer<T> {
    constructor(limit?: number);
    isFull(): boolean;
    push(x: ChannelItem<T>): boolean;
}
export declare class SlidingBuffer<T> extends FixedBuffer<T> {
    constructor(limit?: number);
    isFull(): boolean;
    push(x: ChannelItem<T>): boolean;
}
//# sourceMappingURL=buffer.d.ts.map