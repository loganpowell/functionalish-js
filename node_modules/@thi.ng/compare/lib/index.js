'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const compare = (a, b) => {
    if (a === b) {
        return 0;
    }
    if (a == null) {
        return b == null ? 0 : -1;
    }
    if (b == null) {
        return a == null ? 0 : 1;
    }
    if (typeof a.compare === "function") {
        return a.compare(b);
    }
    if (typeof b.compare === "function") {
        return -b.compare(a);
    }
    return a < b ? -1 : a > b ? 1 : 0;
};

const compareByKey = (key, cmp = compare) => (x, y) => cmp(x[key], y[key]);
const compareByKeys2 = (a, b, cmpA = compare, cmpB = compare) => (x, y) => {
    let res = cmpA(x[a], y[a]);
    return res === 0 ? cmpB(x[b], y[b]) : res;
};
const compareByKeys3 = (a, b, c, cmpA = compare, cmpB = compare, cmpC = compare) => (x, y) => {
    let res = cmpA(x[a], y[a]);
    return res === 0
        ? (res = cmpB(x[b], y[b])) === 0
            ? cmpC(x[c], y[c])
            : res
        : res;
};
const compareByKeys4 = (a, b, c, d, cmpA = compare, cmpB = compare, cmpC = compare, cmpD = compare) => (x, y) => {
    let res = cmpA(x[a], y[a]);
    return res === 0
        ? (res = cmpB(x[b], y[b])) === 0
            ? (res = cmpC(x[c], y[c])) === 0
                ? cmpD(x[d], y[d])
                : res
            : res
        : res;
};

const compareNumAsc = (a, b) => a - b;
const compareNumDesc = (a, b) => b - a;

const reverse = (cmp) => (a, b) => -cmp(a, b);

exports.compare = compare;
exports.compareByKey = compareByKey;
exports.compareByKeys2 = compareByKeys2;
exports.compareByKeys3 = compareByKeys3;
exports.compareByKeys4 = compareByKeys4;
exports.compareNumAsc = compareNumAsc;
exports.compareNumDesc = compareNumDesc;
exports.reverse = reverse;
