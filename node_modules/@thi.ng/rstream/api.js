import { NULL_LOGGER } from "@thi.ng/api";
export var State;
(function (State) {
    State[State["IDLE"] = 0] = "IDLE";
    State[State["ACTIVE"] = 1] = "ACTIVE";
    State[State["DONE"] = 2] = "DONE";
    State[State["ERROR"] = 3] = "ERROR";
    State[State["DISABLED"] = 4] = "DISABLED"; // TODO currently unused
})(State || (State = {}));
/**
 * Closing behaviors.
 */
export var CloseMode;
(function (CloseMode) {
    /**
     * Never close, even if no more inputs/outputs.
     */
    CloseMode[CloseMode["NEVER"] = 0] = "NEVER";
    /**
     * Close when first input/output is done / removed.
     */
    CloseMode[CloseMode["FIRST"] = 1] = "FIRST";
    /**
     * Close when last input/output is done / removed.
     */
    CloseMode[CloseMode["LAST"] = 2] = "LAST";
})(CloseMode || (CloseMode = {}));
export let LOGGER = NULL_LOGGER;
export const setLogger = (logger) => (LOGGER = logger);
