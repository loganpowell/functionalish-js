import { CommonOpts } from "../api";
import { Stream } from "../stream";
export interface FromIntervalOpts extends CommonOpts {
    /**
     * If given, only the stated number of values will be emitted (in
     * the `[0...num)` interval) and the stream will become inactive (or
     * close) after.
     *
     * @defaultValue Infinity
     */
    num: number;
}
/**
 * Returns a {@link Stream} of monotonically increasing counter values,
 * emitted at given `delay` interval and up to the optionally defined
 * max value (default: âˆž), after which the stream is closed.
 *
 * @remarks
 * The stream only starts when the first subscriber becomes available.
 *
 * @param delay -
 * @param opts -
 */
export declare const fromInterval: (delay: number, opts?: Partial<FromIntervalOpts> | undefined) => Stream<number>;
//# sourceMappingURL=interval.d.ts.map