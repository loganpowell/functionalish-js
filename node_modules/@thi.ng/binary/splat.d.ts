/**
 * Repeats lowest nibble of `x` as 24 bit uint.
 *
 * @param x -
 */
export declare const splat4_24: (x: number) => number;
/**
 * Repeats lowest nibble of `x` as 32 bit uint.
 *
 * @param x -
 */
export declare const splat4_32: (x: number) => number;
/**
 * Repeats lowest byte of `x` as 24 bit uint.
 *
 * @param x -
 */
export declare const splat8_24: (x: number) => number;
/**
 * Repeats lowest byte of `x` as 32 bit uint.
 *
 * @param x -
 */
export declare const splat8_32: (x: number) => number;
/**
 * Repeats lowest 16bit of `x` as 32 bit uint.
 *
 * @param x -
 */
export declare const splat16_32: (x: number) => number;
/**
 * Returns true if bits 0-3 are same as bits 4-7.
 *
 * @param x -
 */
export declare const same4: (x: number) => boolean;
/**
 * Returns true if bits 0-7 are same as bits 8-15.
 *
 * @param x -
 */
export declare const same8: (x: number) => boolean;
//# sourceMappingURL=splat.d.ts.map