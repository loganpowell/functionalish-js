!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@thi.ng/equiv")):"function"==typeof define&&define.amd?define(["exports","@thi.ng/equiv"],t):t(((e=e||self).thi=e.thi||{},e.thi.ng=e.thi.ng||{},e.thi.ng.diff={}),e.thi.ng.equiv)}(this,(function(e,t){"use strict";let n,i,s=[],l=[];const o=(e,t,n,i,s)=>{const l=t.length,o=e.linear;if(e.distance=l,0!==s){for(let e=0,n=0;e<l;e++,n+=3)o[n]=i,o[n+1]=e,o[n+2]=t[e];if(3===s){const i=e[n];for(let e=0;e<l;e++)i[e]=t[e]}}return e},r=(e,t,n,i,s,l)=>{const o=n.linear,r=n.const;let f,d,u,h,c=e.length,a=0,g=0;for(l?(f=n.dels,d=n.adds,u=-1,h=1):(f=n.adds,d=n.dels,u=1,h=-1);--c>=0;){const n=e[c],l=t[n],N=t[n+1],p=N-l;for(;a<l||g<N;){const e=g-a;p>e?(o.push(u,g,f[g]=s[g]),g++):p<e?(o.push(h,a,d[a]=i[a]),a++):(o.push(0,a,r[a]=i[a]),a++,g++)}}},f=(e,t,n,i,s,l,o)=>{const r=n.linear,f=l?-1:1,d=l?1:-1;let u=e.length,h=0,c=0;for(;--u>=0;){const n=e[u],l=t[n],a=t[n+1],g=a-l;for(;h<l||c<a;){const e=c-h;g>e?(r.push(f,c,s[c]),c++):g<e?(r.push(d,h,i[h]),h++):(o&&r.push(0,h,i[h]),h++,c++)}}};var d;(d=e.DiffMode||(e.DiffMode={}))[d.ONLY_DISTANCE=0]="ONLY_DISTANCE",d[d.ONLY_DISTANCE_LINEAR=1]="ONLY_DISTANCE_LINEAR",d[d.ONLY_DISTANCE_LINEAR_ONLY_CHANGES=2]="ONLY_DISTANCE_LINEAR_ONLY_CHANGES",d[d.FULL=3]="FULL";const u=(e,t,n)=>{e||(e={}),t||(t={});let i=0;for(let s in e){const l=t[s];(void 0===l||!n(e[s],l))&&i++}for(let n in t)!(n in e)&&i++;return{distance:i}},h=(e,t,n)=>{e||(e={}),t||(t={});let i=0;const s=[],l=[],o=[];for(let s in e){const r=t[s];void 0===r?(l.push(s),i++):n(e[s],r)||(o.push(s,r),i++)}for(let n in t)n in e||(s.push(n),i++);return{distance:i,adds:s,dels:l,edits:o}};e.diffArray=(e,d,u=3,h=t.equiv)=>{const c={distance:0,adds:{},dels:{},const:{},linear:[]};if(e===d||null==e&&null==d)return c;if(null==e||0===e.length)return o(c,d,"adds",1,u);if(null==d||0===d.length)return o(c,e,"dels",-1,u);const a=e.length>=d.length;let g,N,p,L;a?(g=d,N=e):(g=e,N=d),p=g.length,L=N.length;const _=p+1,A=L-p,E=A+_,I=p+L+3,O=(e=>i&&i.length>=e?i:i=new Int32Array(e))(I).fill(-1,0,I),v=(e=>n&&n.length>=e?n:n=new Int32Array(e))(I).fill(-1,0,I),C=s,D=l;C.length=0,D.length=0;const S=(e,t,n)=>{const i=e+_;let s,l;t>n?(s=O[i-1],l=t):(s=O[i+1],l=n);let o=l-e;for(;o<p&&l<L&&h(g[o],N[l]);)o++,l++;return O[i]=D.length/3,D.push(o,l,s),l};let Y,y,q=-1;do{for(q++,Y=-q,y=Y+_;Y<A;Y++,y++)v[y]=S(Y,v[y-1]+1,v[y+1]);for(Y=A+q,y=Y+_;Y>A;Y--,y--)v[y]=S(Y,v[y-1]+1,v[y+1]);v[E]=S(A,v[E-1]+1,v[E+1])}while(v[E]!==L);if(c.distance=A+2*q,0!==u){for(q=3*O[E];q>=0;)C.push(q),q=3*D[q+2];3===u?r(C,D,c,g,N,a):f(C,D,c,g,N,a,1===u)}return c},e.diffObject=(e,n,i=3,s=t.equiv)=>e===n?{distance:0}:0===i?u(e,n,s):h(e,n,s),Object.defineProperty(e,"__esModule",{value:!0})}));