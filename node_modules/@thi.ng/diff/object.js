import { equiv } from "@thi.ng/equiv";
export const diffObject = (a, b, mode = 3 /* FULL */, _equiv = equiv) => a === b
    ? { distance: 0 }
    : mode === 0 /* ONLY_DISTANCE */
        ? diffObjectDist(a, b, _equiv)
        : diffObjectFull(a, b, _equiv);
const diffObjectDist = (a, b, _equiv) => {
    if (!a)
        a = {};
    if (!b)
        b = {};
    let d = 0;
    for (let k in a) {
        const vb = b[k];
        (vb === undefined || !_equiv(a[k], vb)) && d++;
    }
    for (let k in b) {
        !(k in a) && d++;
    }
    return { distance: d };
};
const diffObjectFull = (a, b, _equiv) => {
    if (!a)
        a = {};
    if (!b)
        b = {};
    let d = 0;
    const adds = [];
    const dels = [];
    const edits = [];
    for (let k in a) {
        const vb = b[k];
        if (vb === undefined) {
            dels.push(k);
            d++;
        }
        else if (!_equiv(a[k], vb)) {
            edits.push(k, vb);
            d++;
        }
    }
    for (let k in b) {
        if (!(k in a)) {
            adds.push(k);
            d++;
        }
    }
    return { distance: d, adds, dels, edits };
};
