/**
 * Step/threshold function.
 *
 * @param edge - threshold
 * @param x - test value
 * @returns 0, if `x < e`, else 1
 */
export declare const step: (edge: number, x: number) => 1 | 0;
/**
 * GLSL-style smoothStep threshold function.
 *
 * @param edge - lower threshold
 * @param edge2 - upper threshold
 * @param x - test value
 * @returns 0, if `x < edge1`, 1 if `x > edge2`, else sigmoid interpolation
 */
export declare const smoothStep: (edge: number, edge2: number, x: number) => number;
/**
 * Similar to {@link smoothStep} but using different polynomial.
 *
 * @param edge -
 * @param edge2 -
 * @param x -
 */
export declare const smootherStep: (edge: number, edge2: number, x: number) => number;
/**
 * Exponential ramp with variable shape, e.g.
 *
 * - S-curve: k=8, n=4
 * - Step near 1.0: k=8, n=20
 * - Pulse: k=0.005, n=-10
 * - Ease-in: k=0.5, n=0.25
 *
 * @param k -
 * @param n -
 * @param x -
 */
export declare const expStep: (k: number, n: number, x: number) => number;
//# sourceMappingURL=step.d.ts.map