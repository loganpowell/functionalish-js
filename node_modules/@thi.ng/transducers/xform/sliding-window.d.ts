import type { Transducer } from "../api";
/**
 * Sliding window transducer, similar to `partition(size, 1)`, but
 * supports initially partially filled windows, if `partial` is set to
 * true (default). Each emitted window is a shallow copy of the internal
 * accumulation buffer.
 *
 * @example
 * ```ts
 * [...window(3, range(5))]
 * // [ [ 0 ], [ 0, 1 ], [ 0, 1, 2 ], [ 1, 2, 3 ], [ 2, 3, 4 ] ]
 *
 * [...window(3, false, range(5))]
 * // [ [ 0, 1, 2 ], [ 1, 2, 3 ], [ 2, 3, 4 ] ]
 * ```
 *
 * @param size -
 * @param partial -
 * @param src -
 */
export declare function slidingWindow<T>(size: number, partial?: boolean): Transducer<T, T[]>;
export declare function slidingWindow<T>(size: number, src: Iterable<T>): IterableIterator<T[]>;
export declare function slidingWindow<T>(size: number, partial: boolean, src: Iterable<T>): IterableIterator<T[]>;
//# sourceMappingURL=sliding-window.d.ts.map