/**
 * Returns a new map of same type as input only containing given keys
 * (and only if they existed in the original map).
 *
 * @param src - source map
 * @param ks - selected keys
 */
export declare const selectKeysMap: <K, V>(src: Map<K, V>, ks: Iterable<K>) => Map<K, V>;
/**
 * Returns a new object only containing given keys (and only if they
 * existed in the original).
 *
 * @param src - source object
 * @param ks - selected keys
 */
export declare const selectKeysObj: <T extends any>(src: T, ks: Iterable<string | number | symbol>) => { [id in keyof T]?: T[id] | undefined; };
//# sourceMappingURL=select-keys.d.ts.map